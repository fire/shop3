name: buildapp

on:
  push:
    branches: [master, new-random]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  buildapp:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        lisp: [sbcl]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install SBCL (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install sbcl

      - name: install up-to-date ASDF (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd ${HOME}
          mkdir lisp
          cd lisp
          git clone https://gitlab.common-lisp.net/asdf/asdf.git
          cd asdf
          git checkout release
          make

      - name: Install Lisp (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y sbcl cl-cffi cl-asdf

      - name: install quicklisp (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          iwr -useb https://beta.quicklisp.org/quicklisp.lisp | sbcl --load -

      - name: install up-to-date ASDF (Ubuntu)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          cd ${HOME}
          mkdir lisp
          cd lisp
          git clone https://gitlab.common-lisp.net/asdf/asdf.git
          cd asdf
          git checkout release
          make

      - name: install quicklisp (Ubuntu)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          curl -O https://beta.quicklisp.org/quicklisp.lisp
          echo '(quicklisp-quickstart:install)' | sbcl --load quicklisp.lisp

      - name: install buildapp
        shell: bash
        run: |
          sbcl --load ${HOME}/quicklisp/setup.lisp --eval '(ql:quickload "buildapp")' --eval '(uiop:quit 0)'

      - name: build buildapp binary
        shell: bash
        run: |
          cd ${HOME}/quicklisp/dists/quicklisp/software/buildapp*
          echo "Building buildapp with lisp = sbcl"
          make LISP=sbcl install

      - name: build and install shop app
        shell: bash
        run: |
          cd shop3/buildapp ; make clean ; make LISP=sbcl install

      - name: Upload buildapp binary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: buildapp-binary-${{ matrix.os }}-sbcl
          path: shop3/buildapp/shop

      - name: test shop apps
        shell: bash
        run: |
          cd shop3/buildapp ; ./test.sh
